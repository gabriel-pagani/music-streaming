DROP TABLE IF EXISTS PARCELAS;
DROP TABLE IF EXISTS EMPRESTIMOS;
DROP TABLE IF EXISTS SOLICITACOES;
DROP TABLE IF EXISTS ENDERECOS;
DROP TABLE IF EXISTS USUARIOS;

CREATE TABLE USUARIOS (
        ID INT IDENTITY(1,1) PRIMARY KEY,        
        EMAIL VARCHAR(255) UNIQUE CHECK (EMAIL LIKE '%_@_%._%') NOT NULL,
        HASH_SENHA VARCHAR(72) NOT NULL,
        NOME VARCHAR(100) NOT NULL,
        CPF CHAR(14) CHECK (CPF LIKE '___.___.___-__'),
        DATA_NASCIMENTO DATE CHECK (DATEADD(YEAR, 18, DATA_NASCIMENTO) < GETDATE()),
        RENDA_MENSAL DECIMAL(10,2) CHECK (RENDA_MENSAL >= 0),
        TELEFONE CHAR(14) UNIQUE CHECK (TELEFONE LIKE '(__)_____-____'),
        SCORE INT CHECK (SCORE BETWEEN -1000 AND 1000) DEFAULT 0,
        STATUS VARCHAR(9) CHECK (STATUS IN ('Ativo', 'Inativo', 'Bloqueado')) DEFAULT 'Inativo',
        TIPO VARCHAR(8) CHECK (TIPO IN ('Admin', 'User', 'Approver')) DEFAULT 'User',
        DATA_CADASTRO DATE DEFAULT GETDATE(),
        DATA_ATUALIZACAO DATE,
        OBSERVACOES VARCHAR(MAX),
);
CREATE UNIQUE INDEX CPFS_UNICOS ON USUARIOS(CPF) WHERE CPF IS NOT NULL;

CREATE TABLE ENDERECOS (
        ID INT IDENTITY(1,1) PRIMARY KEY,
        ID_USUARIO INT FOREIGN KEY REFERENCES USUARIOS(ID) NOT NULL,
        ESTADO CHAR(2) NOT NULL,
        CIDADE VARCHAR(255) NOT NULL,
        BAIRRO VARCHAR(255) NOT NULL,
        LOGRADOURO VARCHAR(255) NOT NULL,
        NUMERO INT,
        COMPLEMENTO VARCHAR(MAX),
        CEP CHAR(9) CHECK (CEP LIKE '_____-___'),
        DATA_CADASTRO DATE DEFAULT GETDATE(),
        DATA_ATUALIZACAO DATE,
        OBSERVACOES VARCHAR(MAX),
);

-- Tabela de solicitações de empréstimo
CREATE TABLE SOLICITACOES (
        ID INT IDENTITY(1,1) PRIMARY KEY,     
        ID_SOLICITANTE INT FOREIGN KEY REFERENCES USUARIOS(ID) NOT NULL,
        ID_APROVADOR INT FOREIGN KEY REFERENCES USUARIOS(ID),
        VALOR_SOLICITADO DECIMAL(10,2) CHECK (VALOR_SOLICITADO > 0) NOT NULL,
        VALOR_APROVADO DECIMAL(10,2) CHECK (VALOR_APROVADO > 0),
        DATA_EMPRESTIMO_DESEJADA DATE NOT NULL,
        NUMERO_MESES INT CHECK (NUMERO_MESES BETWEEN 1 AND 36) NOT NULL,
        EXPLICACAO VARCHAR(MAX) NOT NULL,
        STATUS VARCHAR(10) CHECK (STATUS IN ('Em análise', 'Aprovado', 'Reprovado')) DEFAULT 'Em análise',
        DATA_SOLICITACAO DATE DEFAULT GETDATE(),    
        DATA_APROVACAO DATE,
        OBSERVACOES VARCHAR(MAX),
        
        CONSTRAINT CHK_DATAS_SOLICITACAO CHECK (
            DATA_EMPRESTIMO_DESEJADA > CAST(DATEADD(DAY, 15, GETDATE()) AS DATE)
        ),
        CONSTRAINT CHK_VALOR_APROVADO CHECK (
            (STATUS = 'Aprovado' AND VALOR_APROVADO IS NOT NULL) OR
            (STATUS != 'Aprovado')
        )
);

-- Tabela de empréstimos aprovados
CREATE TABLE EMPRESTIMOS (
        ID INT IDENTITY(1,1) PRIMARY KEY, 
        ID_USUARIO INT FOREIGN KEY REFERENCES USUARIOS(ID) NOT NULL,
        ID_SOLICITACAO INT FOREIGN KEY REFERENCES SOLICITACOES(ID) UNIQUE NOT NULL,
        VALOR_TOTAL DECIMAL(10,2) CHECK (VALOR_TOTAL > 0) NOT NULL,
        TAXA_JUROS_MENSAL DECIMAL(5,2) CHECK (TAXA_JUROS_MENSAL >= 0) NOT NULL,
        DATA_LIBERACAO DATE NOT NULL,
        DATA_PRIMEIRA_PARCELA DATE NOT NULL,
        DATA_ULTIMA_PARCELA DATE NOT NULL,
        NUMERO_PARCELAS INT CHECK (NUMERO_PARCELAS > 0) NOT NULL,
        VALOR_PARCELA DECIMAL(10,2) CHECK (VALOR_PARCELA > 0) NOT NULL,
        STATUS VARCHAR(12) CHECK (STATUS IN ('Em andamento', 'Quitado', 'Atrasado', 'Cancelado')) DEFAULT 'Em andamento',
        OBSERVACOES VARCHAR(MAX),
        
        CONSTRAINT CHK_DATAS_EMPRESTIMO CHECK (
            DATA_PRIMEIRA_PARCELA > DATA_LIBERACAO AND
            DATA_ULTIMA_PARCELA >= DATA_PRIMEIRA_PARCELA
        )
);

-- Tabela de parcelas dos empréstimos
CREATE TABLE PARCELAS (
        ID INT IDENTITY(1,1) PRIMARY KEY,
        ID_EMPRESTIMO INT FOREIGN KEY REFERENCES EMPRESTIMOS(ID) NOT NULL,
        NUMERO_PARCELA INT CHECK (NUMERO_PARCELA > 0) NOT NULL,
        VALOR_PARCELA DECIMAL(10,2) CHECK (VALOR_PARCELA > 0) NOT NULL,
        DATA_VENCIMENTO DATE NOT NULL,
        DATA_PAGAMENTO DATE,
        VALOR_PAGO DECIMAL(10,2),
        VALOR_JUROS_MORA DECIMAL(10,2) DEFAULT 0,
        VALOR_MULTA DECIMAL(10,2) DEFAULT 0,
        STATUS VARCHAR(10) CHECK (STATUS IN ('Pendente', 'Paga', 'Atrasada', 'Cancelada')) DEFAULT 'Pendente',
        OBSERVACOES VARCHAR(255),
        
        CONSTRAINT UC_EMPRESTIMO_PARCELA UNIQUE (ID_EMPRESTIMO, NUMERO_PARCELA),
        CONSTRAINT CHK_VALOR_PAGO CHECK (
            (STATUS = 'Paga' AND VALOR_PAGO IS NOT NULL AND DATA_PAGAMENTO IS NOT NULL) OR
            (STATUS != 'Paga')
        )
);
